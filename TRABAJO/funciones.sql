--TRABAJO FINAL BD
SET SERVEROUTPUT ON
/
--CREO SEQUENCE PARA QUE ME DE CUALQUIER VALOR PARA LA ID DE LA PERSONA
CREATE SEQUENCE SEQ_PERSONA INCREMENT BY 1;
/
SELECT * FROM HB_PERSONA;
/
--INSERTO VALORES PARA LA TABLA PERSONA
INSERT INTO HB_PERSONA VALUES (1,'ANDREA','TARAZONA','C');
/
--FUNCION PARA INSERTAR UNA PERSONA CON SUS DATOS EN LA TABLA PERSONA
CREATE OR REPLACE PROCEDURE INSERTAR_PERSONA(K_NOMBRE VARCHAR2, K_APELLIDO VARCHAR2,K_TIPO CHAR)
IS
BEGIN
    IF (K_TIPO = 'C' OR K_TIPO = 'M' ) THEN 
        INSERT INTO HB_PERSONA VALUES (SEQ_PERSONA.NEXTVAL,K_NOMBRE,K_APELLIDO,K_TIPO);
    ELSE
        DBMS_OUTPUT.PUT_LINE('Ingresó mal el tipo de persona');
    END IF;
END;
/
EXEC INSERTAR_PERSONA('MARIO','MEDINA','M');
/
--TRIGGER QUE MANDE MENSAJE DESPUES DE INSERTAR, PARA SABER QUE TIPO DE PERSONA INGRESÓ 
CREATE OR REPLACE TRIGGER TR_INSERTAR_PERSONA
AFTER INSERT ON HB_PERSONA
FOR EACH ROW
DECLARE

BEGIN

     /*ACTUALIZA EL SALDO DE SB_CUENTA,pero primero evalua si fue deposito o retiro*/
    IF :NEW.TIPO_PERSONA = 'C' THEN
        dbms_output.put_line('El tipo de persona que se ingresó es un CAJERO');
    END IF;
    
    IF :NEW.TIPO_PERSONA = 'M' THEN
        dbms_output.put_line('El tipo de persona que se ingresó es un MOTORIZADO');
    END IF;
    
END;
/
EXEC INSERTAR_PERSONA('PEDRO','MERINO','M');
/
SELECT * FROM HB_PERSONA
ORDER BY ID_PERSONA ASC;
/
SELECT * FROM HB_INGREDIENTE
ORDER BY ID_INGREDIENTE ASC;
/
--AGREGARÉ INGREDIENTES, PARA LUEGO CREAR UNA FUNCION QUE AUMENTE EL LOTE DE UN INGREDIENTE EN ESPECIFICO
CREATE SEQUENCE SEQ_INGREDIENTE INCREMENT BY 1;
/
--PUROS INSERT'S
SELECT * FROM HB_INGREDIENTE;
INSERT INTO HB_INGREDIENTE VALUES(1,'TOMATE',20,'GRAMOS');
INSERT INTO HB_INGREDIENTE VALUES(2,'LECHUGA',50,'GRAMOS');
INSERT INTO HB_INGREDIENTE VALUES(3,'QUESO',40,'GRAMOS');
INSERT INTO HB_INGREDIENTE VALUES(4,'HAMBURGUESA',200,'KILOS');
/
SELECT * FROM HB_LOTE;
INSERT INTO HB_LOTE VALUES(1,'XXX',1,2,200,'24/01/2025','01/05/2023',200);
INSERT INTO HB_LOTE VALUES(2,'XXX',2,1,150,'28/01/2025','01/05/2023',200);
INSERT INTO HB_LOTE VALUES(3,'XXX',3,3,151,'08/01/2025','01/05/2023',200);
INSERT INTO HB_LOTE VALUES(4,'XXX',4,4,170,'18/01/2025','01/05/2023',200);
/
SELECT * FROM HB_LOTE
ORDER BY ID_LOTE ASC;
/
--TRIGGER QUE ME IMPRIME EL LOTE DESPUES DE ACTUALIZAR, IMPRIME EL ANTIGUO Y EL NUEVO
CREATE OR REPLACE TRIGGER TR_INGRESO_CANT_LOTE
AFTER UPDATE ON HB_LOTE
FOR EACH ROW
DECLARE
    CANTIDAD_ANT_LOTE NUMBER;
    CANTIDAD_NUEVA_LOTE NUMBER;
BEGIN

    CANTIDAD_ANT_LOTE:= :OLD.CANTIDAD;
    
    dbms_output.put_line('Lote anterior: '||CANTIDAD_ANT_LOTE);
    
    CANTIDAD_NUEVA_LOTE:= :NEW.CANTIDAD;
    
    dbms_output.put_line('Lote Nuevo: '||CANTIDAD_NUEVA_LOTE);
EXCEPTION 
    WHEN NO_DATA_FOUND THEN
        dbms_output.put_line('No se encontró el ingrediente.');
END;
/
UPDATE HB_LOTE
SET CANTIDAD = CANTIDAD+300
WHERE ID_INGREDIENTE = 1;
/
--SE PUEDE CREAR FUNCION PARA ACTUALIZAR EL LOTE :)
/
--TABLAS MODIFICADAS
SELECT* FROM HB_LOTE
ORDER BY ID_LOTE ASC;
SELECT * FROM HB_PERSONA
ORDER BY ID_PERSONA ASC;
SELECT * FROM HB_INGREDIENTE
ORDER BY ID_INGREDIENTE;
--:)
/
SELECT E.HORA_ENTREGA
FROM HB_ENTREGA E, HB_PEDIDO P, HB_CLIENTE_D C
WHERE P.ID_PEDIDO = E.HB_PEDIDO_ID_PEDIDO
AND P.ID_CLIENTE = C.TELEFONO;
/
--FUNCION QUE MUESTRE LA HORA EN LA QUE SE ENTREGÓ UN PEDIDO JUNTO CON LOS DATOS DEL CLIENTE: 
--IMPRIMIRÁ (EL PEDIDO XXX DEL CLIENTE XXXX, SE ENTREGÓ EL DIA XXXX)
CREATE OR REPLACE PROCEDURE P_MOSTRAR_PEDIDO_CLIENTE(H_NUMERO_PEDIDO NUMBER)
IS
    H_HORA_ENTREGA NUMBER;
BEGIN
    
    SELECT E.HORA_ENTREGA INTO H_HORA_ENTREGA
    FROM HB_ENTREGA E, HB_PEDIDO P, HB_CLIENTE_D C
    WHERE P.ID_PEDIDO = E.HB_PEDIDO_ID_PEDIDO
    AND P.ID_PEDIDO = H_NUMERO_PEDIDO
    AND P.ID_CLIENTE = C.TELEFONO;
    
    dbms_output.put_line('El pedido '||H_NUMERO_PEDIDO||' se entregará a las '||H_HORA_ENTREGA);
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No existe el pedido en la base de datos');
END;

--CURSOR QUE MUESTRE EL LISTADO DE TODOS LOS PEDIDOS DE UN DIA EN ESPECIFICO, JUNTO CON LOS DATOS DEL CLIENTE
--EZ