-- ALEX CALERO REVILLA - 20206455

SET SERVEROUTPUT ON;

-- PREGUNTA 1
CREATE OR REPLACE FUNCTION SF_MONTO_PED_PENDIENTE(P_ID_CLIENTE HE_PEDIDO.ID_CLIENTE%TYPE)
RETURN NUMBER IS
    V_PREC_TOTAL NUMBER(7,2);
BEGIN
    SELECT SUM(PRECIO)
    INTO V_PREC_TOTAL
    FROM HE_PEDIDO
    WHERE ID_CLIENTE = P_ID_CLIENTE AND ESTADO = 'P';
    
    IF V_PREC_TOTAL IS NULL THEN
        V_PREC_TOTAL := 0;
    END IF;
    
    RETURN V_PREC_TOTAL;
END;
/
-- PRUEBO LAS SALIDAS DE LA FUNCION
SELECT SF_MONTO_PED_PENDIENTE(1) FROM DUAL;
SELECT SF_MONTO_PED_PENDIENTE(2) FROM DUAL;
SELECT SF_MONTO_PED_PENDIENTE(3) FROM DUAL;
SELECT SF_MONTO_PED_PENDIENTE(4) FROM DUAL;
SELECT SF_MONTO_PED_PENDIENTE(5) FROM DUAL;
/

-- PREGUNTA 2
CREATE OR REPLACE PROCEDURE SP_IMPRIME_CLIENTE(P_ID_CLIENTE HE_CLIENTE.ID_CLIENTE%TYPE)
IS
    V_DNI VARCHAR2(8 BYTE);
    V_NOMBRES VARCHAR2(50 BYTE);
    V_APELLIDOS VARCHAR2(50 BYTE);
BEGIN
    SELECT DNI, NOMBRES, APELLIDOS
    INTO V_DNI, V_NOMBRES, V_APELLIDOS
    FROM HE_CLIENTE
    WHERE ID_CLIENTE = P_ID_CLIENTE;
    
    DBMS_OUTPUT.PUT_LINE(V_DNI||' - '||V_NOMBRES||' '||V_APELLIDOS);
END;
/
-- PRUEBO LAS SALIDAS DEL PROCEDIMIENTO
EXEC SP_IMPRIME_CLIENTE(1);
EXEC SP_IMPRIME_CLIENTE(2);
EXEC SP_IMPRIME_CLIENTE(3);
EXEC SP_IMPRIME_CLIENTE(4);
EXEC SP_IMPRIME_CLIENTE(5);
/

-- PREGUNTA 3
CREATE OR REPLACE PROCEDURE SP_IMPRIMIR_MONTO(P_MONTO NUMBER)
IS
BEGIN
    IF P_MONTO = 0 THEN
        DBMS_OUTPUT.PUT_LINE('No tiene pedidos pendientes.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Monto total de pedidos pendientes: '||P_MONTO||' soles.');
    END IF;
END;
/
-- PRUEBO LAS SALIDAS DEL PROCEDIMIENTO
-- ENTEROS
EXEC SP_IMPRIMIR_MONTO(0);
EXEC SP_IMPRIMIR_MONTO(22);
/
-- DECIMALES
DECLARE
    V_MONTO NUMBER;
BEGIN
    V_MONTO := 12.5;
    SP_IMPRIMIR_MONTO(V_MONTO);
END;
/

-- PREGUNTA 4
DECLARE
    V_ID_CLIENTE NUMBER;
BEGIN
    V_ID_CLIENTE := 1;
    SP_IMPRIME_CLIENTE(V_ID_CLIENTE);
    SP_IMPRIMIR_MONTO(SF_MONTO_PED_PENDIENTE(V_ID_CLIENTE));
    
    DBMS_OUTPUT.PUT_LINE('');
    
    V_ID_CLIENTE := 2;
    SP_IMPRIME_CLIENTE(V_ID_CLIENTE);
    SP_IMPRIMIR_MONTO(SF_MONTO_PED_PENDIENTE(V_ID_CLIENTE));
    
    DBMS_OUTPUT.PUT_LINE('');
    
    V_ID_CLIENTE := 3;
    SP_IMPRIME_CLIENTE(V_ID_CLIENTE);
    SP_IMPRIMIR_MONTO(SF_MONTO_PED_PENDIENTE(V_ID_CLIENTE));
    
    DBMS_OUTPUT.PUT_LINE('');
    
    V_ID_CLIENTE := 4;
    SP_IMPRIME_CLIENTE(V_ID_CLIENTE);
    SP_IMPRIMIR_MONTO(SF_MONTO_PED_PENDIENTE(V_ID_CLIENTE));
    
    DBMS_OUTPUT.PUT_LINE('');
    
    V_ID_CLIENTE := 5;
    SP_IMPRIME_CLIENTE(V_ID_CLIENTE);
    SP_IMPRIMIR_MONTO(SF_MONTO_PED_PENDIENTE(V_ID_CLIENTE));
END;
/

-- PREGUNTA 5
CREATE OR REPLACE FUNCTION SF_VERIFICAR_DESCUENTO(P_ID_PEDIDO HE_PEDIDO.ID_PEDIDO%TYPE)
RETURN NUMBER IS
    V_APLICA NUMBER;
    V_CONTEO NUMBER;
BEGIN
    SELECT COUNT(*)
    -- VA A DEVOLVER 1 (1 FILA ENCONTRADA) SI HA PEDIDO MÁS DE 3 BOLAS DE UN MISMO SABOR
    -- POR EL CONTRARIO, DEVOLVERÁ 0 (0 FILAS ENCONTRADAS) SI NO HA PEDIDO MÁS DE 3 BOLAS DEL MISMO SABOR
    INTO V_CONTEO
    FROM HE_PEDIDO PED, HE_PEDIDO_POSTRE PP, HE_PEDIDO_POSTRE_SABOR PPS
    WHERE PED.ID_PEDIDO = P_ID_PEDIDO AND PED.ESTADO = 'P' AND PED.ID_PEDIDO = PP.ID_PEDIDO
          AND PP.ID_PEDIDO_POSTRE = PPS.ID_PEDIDO_POSTRE AND PPS.NUMERO_BOLAS > 3;
    
    -- SI EL CONTEO ES 1, SIGNIFICA QUE SÍ PIDIÓ MÁS DE 3 BOLAS DE HELADO DEL MISMO SABOR
    -- POR LO TANTO, APLICA PARA EL DESCUENTO
    IF V_CONTEO = 1 THEN
        V_APLICA := 1;
    ELSE
        V_APLICA := 0;
    END IF;
    
    RETURN V_APLICA;
END;
/
-- PRUEBO LAS SALIDAS DE LA FUNCION
SELECT SF_VERIFICAR_DESCUENTO(2) FROM DUAL;
SELECT SF_VERIFICAR_DESCUENTO(6) FROM DUAL;
SELECT SF_VERIFICAR_DESCUENTO(8) FROM DUAL;
SELECT SF_VERIFICAR_DESCUENTO(11) FROM DUAL;
/

-- PREGUNTA 6
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_PEDIDO(P_ID_PEDIDO HE_PEDIDO.ID_PEDIDO%TYPE)
IS
    V_ES_VALIDO NUMBER;
BEGIN
    V_ES_VALIDO := SF_VERIFICAR_DESCUENTO(P_ID_PEDIDO);
    
    IF V_ES_VALIDO = 1 THEN
        UPDATE HE_PEDIDO SET PRECIO = PRECIO - 1.50 WHERE ID_PEDIDO = P_ID_PEDIDO;
        DBMS_OUTPUT.PUT_LINE('Se ha aplicado el descuento de S/ 1.50 al pedido: '||P_ID_PEDIDO);
    ELSE
        DBMS_OUTPUT.PUT_LINE('El pedido: '||P_ID_PEDIDO||', no cumple con el descuento a aplicar.');
    END IF;
END;
/
-- PRUEBO LAS SALIDAS DEL PROCEDIMIENTO
EXEC SP_ACTUALIZAR_PEDIDO(6);
EXEC SP_ACTUALIZAR_PEDIDO(8);
/