--SOLUCION PARCIAL 2021-2

--PREGUNTA 2:

-----------------------------------------------------------------------
--INCISO A: LISTAR LA INFORMACION DE LAS CUENTAS(PROPIETARIAS) QUE TENGAN
-- MAS DE 10 LIKES EN SUS VIDEOS, EN EL PERIODO DE 1 DE AGOSTO DEL 2021
-- Y EL 30 DE SETIEMBRE DEL 2021. ORD POR CUENTA CON + LIKES
-----------------------------------------------------------------------
SELECT * FROM CUENTA; -- IDCUENTA + USUARIO + IDTIPOCUENTA
SELECT * FROM TIPOCUENTA; -- IDTIPOCUENTA + DESCRIPCION
SELECT * FROM ACCION; -- FECHA_LIKE , FLAGLIKE
SELECT * FROM VIDEO; -- IDCUENTA_PROPIETARIA

--PLANTEAMIENTO: PRIMERO PUEDO SACAR LA CANTIDAD DE LIKES DE CADA USUARIO
SELECT C.USUARIO, SUM( A.FLAGLIKE)
FROM CUENTA C, ACCION A, VIDEO V
WHERE c.idcuenta = V.IDCUENTA_PROPIETARIA AND v.idvideo = a.idvideo
GROUP BY C.USUARIO;

-- CUENTA_PROPIETARIA | USUARIO | TIPO_CUENTA | NUM_LIKES
SELECT V.IDCUENTA_PROPIETARIA AS CUENTA_PROPIETARIA, C.USUARIO, T.DESCRIPCION, SUM(A.FLAGLIKE) AS CANTLIKES
FROM CUENTA C, TIPOCUENTA T, ACCION A, VIDEO V
WHERE v.idvideo = a.idvideo --c.idcuenta = a.idcuenta (NO ES NECESARIO)
AND t.idtipocuenta = c.idtipocuenta AND C.IDCUENTA = V.IDCUENTA_PROPIETARIA
AND TO_CHAR(A.FECHA_LIKE,'DD/MM/YYYY') BETWEEN '01/08/2021' AND '30/09/2021'
GROUP BY V.IDCUENTA_PROPIETARIA, C.USUARIO, T.DESCRIPCION
HAVING  SUM(A.FLAGLIKE) >10
ORDER BY 1 DESC;

-----------------------------------------------------------------------
--INCISO B) LISTAR TOP 5 DE VIDEOS (ROWNUM >=5) CON MAYOR CANT DE MINUTOS DE REPRODUCCION
--COMPARTIDOS AL MENOS 3 VECES Y QUE TENGAN AL MENOS UNA PUBLICIDAD ACTIVA
-----------------------------------------------------------------------

--PLANTEAMIENTO: HALLAR LA CANTIDAD DE REPRODUCCIONES DE CADA VIDEO
SELECT * FROM VIDEO; -- IDVIDEO + IDCUENTA_PROPIETARIA + TITULO
SELECT * FROM ACCION; -- IDVIDEO, IDCUENTA, MIN_REPRODUCCION, FLAGCOMPARTIDO
SELECT * FROM PUBLICIDAD_X_VIDEO; --ACTIVO

--PARA APLICAR EL EXISTS , EVALUO LA CANTIDAD DE ACTIVOS QUE TIENEN POR VIDEO
SELECT V.TITULO, SUM(P.ACTIVO)
FROM VIDEO V, PUBLICIDAD_X_VIDEO P
WHERE v.idvideo = p.idvideo
GROUP BY V.TITULO
HAVING SUM(P.ACTIVO)>=1;

--CUENTO LOS MINUTOS DE REPRODUCCION DE UN CONJUNTO DE PERSONAS POR VIDEO
SELECT V.IDVIDEO, V.TITULO , SUM(A.FLAGCOMPARTIDO), SUM( A.MIN_REPRODUCCION)
FROM VIDEO V, ACCION A, CUENTA C
WHERE EXISTS (SELECT V.TITULO, SUM(P.ACTIVO)
            FROM VIDEO V, PUBLICIDAD_X_VIDEO P
            WHERE v.idvideo = p.idvideo
            GROUP BY V.TITULO
            HAVING SUM(P.ACTIVO)>=1)
AND v.idvideo = a.idvideO AND C.IDCUENTA = A.IDCUENTA
GROUP BY V.IDVIDEO,V.TITULO
HAVING SUM(A.FLAGCOMPARTIDO)>=3
ORDER BY 3 DESC;

--PARA TERMINAR DAME EL TOP 5
SELECT *
FROM (SELECT V.IDVIDEO, V.TITULO , SUM(A.FLAGCOMPARTIDO), SUM( A.MIN_REPRODUCCION)
FROM VIDEO V, ACCION A, CUENTA C
WHERE EXISTS (SELECT V.TITULO, SUM(P.ACTIVO)
            FROM VIDEO V, PUBLICIDAD_X_VIDEO P
            WHERE v.idvideo = p.idvideo
            GROUP BY V.TITULO
            HAVING SUM(P.ACTIVO)>=1)
AND v.idvideo = a.idvideO AND C.IDCUENTA = A.IDCUENTA
GROUP BY V.IDVIDEO,V.TITULO
HAVING SUM(A.FLAGCOMPARTIDO)>=3
ORDER BY 3 DESC)
WHERE ROWNUM <=5;

-----------------------------------------------------------------------
-- INCISO C: ALMACENAR INFORMACION DEL SIGUIENTE VIDEO PUBLICITARIO
--ASOCIACION POR EL CODIGO DE LA PUBLICIDAD, CODPUBLICADAD IMPAR -> EL VIDEO ASOCIADO SERÁ EL SIGUIENTE COD IMPAR
--CODPUBLICADAD PAR -> EL VIDEO ASOCIADO SERÁ EL SIGUIENTE COD PAR
-----------------------------------------------------------------------
SELECT * FROM PUBLICIDAD;

/*PREGUNTA C.1*/
ALTER TABLE PUBLICIDAD ADD IDPUBLICIDAD_ASOCIADA NUMBER;
/*PREGUNTA C.2*/
UPDATE PUBLICIDAD 
SET IDPUBLICIDAD_ASOCIADA=(IDPUBLICIDAD+2)
WHERE (SELECT * FROM PUBLICIDAD PUB WHERE PUB.IDPUBLICIDAD=PUBLICIDAD.IDPUBLICIDAD_ASOCIADA+2);

-----------------------------------------------------------------------
--INCISO D: MOSTRAR PARA CADA VIDEO LAS CUENTAS QUE HAN DADO LIKE
-----------------------------------------------------------------------
SELECT * FROM CUENTA; -- USUARIO + IDCUENTA
SELECT * FROM VIDEO; -- IDVIDEO + IDCUENTA_PROPIETARIA + TITULO 
SELECT * FROM ACCION; -- MIN_REPRODUCCION + FECHA_LIKE + FLAGLIKE

--PLANTEAMIENTO: PRIMERO PUEDO SACAR LOS USUARIOS QUE DIERON LIKE A UN VIDEO
SELECT V.IDCUENTA_PROPIETARIA, V.TITULO, C.USUARIO, A.MIN_REPRODUCCION, TO_CHAR(A.FECHA_LIKE,'DD "de" Month "del" YYYY') as FECHA_LIKE
FROM VIDEO V, CUENTA C, ACCION A
WHERE C.IDCUENTA <> V.IDCUENTA_PROPIETARIA
AND c.idcuenta = a.idcuenta AND V.IDVIDEO = A.IDVIDEO
AND A.FLAGLIKE = 1
ORDER BY V.TITULO, C.USUARIO;


SELECT X.USUARIO, V.TITULO, C.USUARIO, A.FLAGLIKE
FROM VIDEO V, CUENTA C, ACCION A, (SELECT C1.USUARIO , C1.IDCUENTA
                                    FROM CUENTA C1, VIDEO V1
                                    WHERE c1.idcuenta = V1.IDCUENTA_PROPIETARIA)X
WHERE X.IDCUENTA <> V.IDCUENTA_PROPIETARIA AND C.IDCUENTA <> V.IDCUENTA_PROPIETARIA
AND c.idcuenta = a.idcuenta AND V.IDVIDEO = A.IDVIDEO AND X.IDCUENTA = A.IDCUENTA
AND A.FLAGLIKE = 1
ORDER BY V.TITULO, C.USUARIO;


--CREO UNA TABLA DONDE SOLO ME MUESTRE A LOS PROPIETARIOS DEL VIDEO}
SELECT C.USUARIO, C.IDCUENTA
FROM CUENTA C, VIDEO V
WHERE c.idcuenta = V.IDCUENTA_PROPIETARIA;
--NO LA ENTIENDO JAJA
-----------------------------------------------------------------------
--INCISO E) CREAR VISTA QUE PERMITA MOSTRAR LOS PAGOS POR PUBLICIDAD ACTIVAS
--SUPERIORES A 2K QUE RECIBEN LAS CUENTAS PROPIETARIAS
--NO CONSIDERAR LAS CUENTAS SOSPECHOSAS (LIKE Y DISLIKE A UN MISMO VIDEO)
-----------------------------------------------------------------------
SELECT * FROM CUENTA;
SELECT * FROM VIDEO;
SELECT * FROM PRIVACIDAD; --DESCRIPCION
SELECT * FROM PUBLICIDAD_X_VIDEO; --IDVIDEO, IDPUBLICIDAD
SELECT * FROM PUBLICIDAD; -- IDPUBLICIDAD, PRECIOPORSEGUNDO, DURACIONPORSEGUNDO
SELECT * FROM ACCION; -- FLAGDISLIKE + FLAGLIKE

--CUENTAS QUE TIENEN 1 LIKE Y UN DISLIKE
SELECT C.IDCUENTA, A.FLAGLIKE, A.FLAGDISLIKE
FROM ACCION A, CUENTA C
WHERE c.idcuenta = a.idcuenta 
AND A.FLAGLIKE = 1 AND A.FLAGDISLIKE = 1;

--PRIMERO PRUEBO UN SELECT
SELECT C.USUARIO, PR.DESCRIPCION , SUM(P.PRECIOPORSEGUNDO*P.DURACIONPORSEGUNDO) AS PAGO_DE_PUBLICIDAD
FROM CUENTA C, PRIVACIDAD PR, PUBLICIDAD P, VIDEO V, PUBLICIDAD_X_VIDEO PV
WHERE C.IDCUENTA = V.IDCUENTA_PROPIETARIA AND v.idprivacidad = pr.idprivacidad
AND v.idvideo = pv.idvideo AND pv.idpublicidad = p.idpublicidad
AND C.IDCUENTA NOT IN (SELECT C.IDCUENTA
                    FROM ACCION A, CUENTA C
                    WHERE c.idcuenta = a.idcuenta 
                    AND A.FLAGLIKE = 1 AND A.FLAGDISLIKE = 1)
GROUP BY C.USUARIO, PR.DESCRIPCION
HAVING SUM(P.PRECIOPORSEGUNDO*P.DURACIONPORSEGUNDO)>2000
ORDER BY 1;

--COMO EL SELECT ME FUNCIONÓ, CREO LA VISTA

CREATE VIEW V_PAGOSXPUBLICIDAD
AS 
SELECT C.USUARIO, PR.DESCRIPCION , SUM(P.PRECIOPORSEGUNDO*P.DURACIONPORSEGUNDO) AS PAGO_DE_PUBLICIDAD
FROM CUENTA C, PRIVACIDAD PR, PUBLICIDAD P, VIDEO V, PUBLICIDAD_X_VIDEO PV
WHERE C.IDCUENTA = V.IDCUENTA_PROPIETARIA AND v.idprivacidad = pr.idprivacidad
AND v.idvideo = pv.idvideo AND pv.idpublicidad = p.idpublicidad
AND C.IDCUENTA NOT IN (SELECT C.IDCUENTA
                    FROM ACCION A, CUENTA C
                    WHERE c.idcuenta = a.idcuenta 
                    AND A.FLAGLIKE = 1 AND A.FLAGDISLIKE = 1)
GROUP BY C.USUARIO, PR.DESCRIPCION
HAVING SUM(P.PRECIOPORSEGUNDO*P.DURACIONPORSEGUNDO)>2000
ORDER BY 1;

SELECT * FROM V_PAGOSXPUBLICIDAD;

-----------------------------------------------------------------------
--INCISO F) CREAR INDICE QUE AYUDE A MEJORAR LAS CONSULTAS 
-- TABLA VIDEO , USAN EL TITULO DEL VIDEO
-----------------------------------------------------------------------

CREATE INDEX IDX_TITULO ON VIDEO (TITULO);




